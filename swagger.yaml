openapi: '3.0.2'
info:
  title: PRAETOR API
  version: '0.0.1'
  description: "APIs for PRAETOR project."
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: 'http://localhost:5000/'
    description: PRAETOR server.


components:
  schemas:
    Endpoint:
      description: Model containing endpoint info.
      type: object
      properties:
        coutry:
          type: string
          example: Luxembourg
        status:
          type: boolean
          example: true
          
    Endpoints:
      description: Array of endpoints.
      type: array
      items:
        $ref: '#/components/schemas/Endpoint'
        
    Crime:
      description: Model containing a specific crime's info in one year.
      type: object
      properties:
        crime:
          type: string
          description: Name of the crime.
          example: Robbery
        year:
          type: integer
          description: Year of reference.
          example: 2019
        n_crimes:
          type: integer
          description: Number of crime's occurrencies in the specified year.
          example: 54
        
    Data:
      description: Crime data of a country.
      type: object
      properties:
        country:
          type: string
          example: Luxembourg
        crimes:
          type: array
          items:
            $ref: '#/components/schemas/Crime'

    
paths:
  /scraper/{country}/status:
    get:
      description: Gets the status of the target country's scraper service
      
      responses:
        200:
          description: Scraping service works with high confidence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoints'
  /endpoints:
    get:
      description: Gets the status of all countries' endpoints.
      
      responses:
        200:
          description: Endpoints successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoints'

  /endpoints/{country}:
    get:
      description: Gets the status of a specific country's data endpoints.
      parameters:
        - in: path
          name: country
          description: The name of the country.
          required: true
          schema:
            type: string
            example: Luxembourg
      responses:
        200:
          description: Endpoint successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
                
  /data/{year}/{country}:
    get:
      description: Gets data for the specified country.
      parameters: 
        - in: path
          name: year
          required: true
          schema:
            type: integer
            description: Year.
            example: 2019
        - in: path
          name: country
          required: true
          schema:
            type: string
            description: The name of the country.
            example: Luxembourg
            
      responses:
        200:
          description: Data succesfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
                
  /years/{country}:
    get:
      description: Gets available years for a selected country.
      parameters:
        - in: path
          name: country
          required: true
          schema:
            type: integer
            description: Country.
            example: Luxembourg.
      
      responses:
        200:
          description: Years succesfully returned.
          content:
            application/json:
              schema:
                type: array
                example: [2017, 2018, 2019]
                items:
                  type: integer
                  
  /countries:
    get:
      description: Gets a list of all available countries.
      
      responses:
        200:
          description: Countries succesfully returned.
          content:
            application/json:
              schema:
                type: array
                example: ['Luxembourg', 'Italy', 'France']
                items:
                  type: string

externalDocs:
  description: "Project Repository"
  url: "https://github.com/Praetor-unicam/backend"